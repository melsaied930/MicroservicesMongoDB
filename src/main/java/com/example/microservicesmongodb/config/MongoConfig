package com.example.microservicesmongodb.config;

import com.mongodb.*;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoDatabase;
import lombok.extern.log4j.Log4j2;
import org.bson.Document;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Log4j2
@Configuration
public class MongoConfig {

    @Bean
    public MongoClient buildMongoClient() {

        String connectionString = "mongodb+srv://admin:admin@cluster0.xxkqp.mongodb.net/sample_mflix?retryWrites=true&w=majority&appName=Cluster0";
        ServerApi serverApi = ServerApi.builder()
                .version(ServerApiVersion.V1)
                .build();

        MongoClientSettings settings = MongoClientSettings.builder()
                .applyConnectionString(new ConnectionString(connectionString))
                .applyToSocketSettings(builder -> builder.connectTimeout(1000, java.util.concurrent.TimeUnit.MILLISECONDS))
                .applyToConnectionPoolSettings(builder -> builder
                        .maxSize(100)
                        .minSize(10)
                        .maxWaitTime(1000, java.util.concurrent.TimeUnit.MILLISECONDS)
                        .maxConnectionIdleTime(30, java.util.concurrent.TimeUnit.SECONDS))
                .serverApi(serverApi).build();

        try {
            MongoClient mongoClient = MongoClients.create(settings);
            MongoDatabase database = mongoClient.getDatabase("sample_mflix");
            database.runCommand(new Document("ping", 1));
            log.info("Pinged your deployment. Successfully connected to MongoDB!");
        } catch (MongoException e) {
            log.error("An error occurred while trying to connect to the MongoDB database", e);
        }

        return MongoClients.create(settings);
    }
}

